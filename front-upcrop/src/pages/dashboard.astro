---
import LandingLayout from '../layouts/LandingLayout.astro';
import Button from '../components/ui/Button.astro';
import logo from '../assets/images/logo.svg';
---

<LandingLayout title="Dashboard - UpCrop" description="Panel de control de UpCrop" hideNavbar>
  <!-- ocultar la navbar global en esta página -->
  <div class="min-h-screen bg-black relative overflow-hidden">
    <div class="absolute inset-0 bg-gradient-to-br from-blue-900/20 via-black to-cyan-900/20"></div>
    <div class="absolute top-0 left-0 w-full h-full bg-[radial-gradient(ellipse_at_center,rgba(65,102,245,0.15),transparent_50%)]"></div>


    <div class="absolute top-20 left-10 w-32 h-32 bg-cyan-400/5 rounded-full blur-xl animate-pulse"></div>
    <div class="absolute bottom-32 right-16 w-40 h-40 bg-blue-500/5 rounded-full blur-xl animate-pulse delay-300"></div>
    <div class="absolute top-1/2 right-1/4 w-24 h-24 bg-cyan-300/10 rounded-full blur-lg animate-pulse delay-700"></div>
    
    <!-- Header -->
    <header class="relative z-10 border-b border-white/10 bg-black/20 backdrop-blur-xl">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">

          <div class="flex items-center">
            <img src={logo.src} alt="UpCrop logo" class="h-8 w-auto mr-3" />
            <h1 class="text-xl font-bold text-white">Dashboard</h1>
          </div>
          

          <div class="flex items-center space-x-4">
            <div class="text-right">
              <p class="text-sm text-gray-300" id="userGreeting">Cargando...</p>
              <p class="text-xs text-gray-400" id="userEmail">...</p>
            </div>
            <Button 
              id="logoutBtn"
              variant="secondary" 
              size="sm"
              class="bg-red-500/20 hover:bg-red-500/30 text-red-400 border-red-500/30"
            >
              Cerrar Sesión
            </Button>
          </div>
        </div>
      </div>
    </header>

    <!-- Main content -->
    <main class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      
      <div class="mb-8">
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-8 shadow-2xl">
          <div class="text-center">
            <div class="w-16 h-16 bg-gradient-to-r from-[--accent] to-cyan-500 rounded-full mx-auto mb-4 flex items-center justify-center">
              <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <h2 class="text-3xl font-bold text-white mb-2">¡Autenticación Exitosa!</h2>
            <p class="text-gray-400 text-lg">El sistema de login está funcionando correctamente</p>
          </div>
        </div>
      </div>

      <!-- Stats grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        
        <!-- Stat 1 -->
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-xl p-6">
          <div class="flex items-center">
            <div class="p-2 bg-green-500/20 rounded-lg">
              <svg class="w-6 h-6 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-400">Estado del Sistema</p>
              <p class="text-2xl font-bold text-white">Activo</p>
            </div>
          </div>
        </div>

        <!-- Stat 2 -->
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-xl p-6">
          <div class="flex items-center">
            <div class="p-2 bg-blue-500/20 rounded-lg">
              <svg class="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-400">Autenticación</p>
              <p class="text-2xl font-bold text-white">JWT</p>
            </div>
          </div>
        </div>

        <!-- Stat 3 -->
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-xl p-6">
          <div class="flex items-center">
            <div class="p-2 bg-purple-500/20 rounded-lg">
              <svg class="w-6 h-6 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-400">Backend</p>
              <p class="text-2xl font-bold text-white">Django</p>
            </div>
          </div>
        </div>

        <!-- Stat 4 -->
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-xl p-6">
          <div class="flex items-center">
            <div class="p-2 bg-cyan-500/20 rounded-lg">
              <svg class="w-6 h-6 text-cyan-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-400">Frontend</p>
              <p class="text-2xl font-bold text-white">Astro</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Main content cards -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        
        <!-- User Information Card -->
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-8">
          <h3 class="text-xl font-bold text-white mb-6 flex items-center">
            <svg class="w-5 h-5 mr-2 text-[--accent]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            Información del Usuario
          </h3>
          
          <div class="space-y-4" id="userInfo">
            <div class="flex justify-between py-3 border-b border-white/10">
              <span class="text-gray-400">Nombre:</span>
              <span class="text-white font-medium" id="userName">Cargando...</span>
            </div>
            <div class="flex justify-between py-3 border-b border-white/10">
              <span class="text-gray-400">Usuario:</span>
              <span class="text-white font-medium" id="userUsername">Cargando...</span>
            </div>
            <div class="flex justify-between py-3 border-b border-white/10">
              <span class="text-gray-400">Email:</span>
              <span class="text-white font-medium" id="userEmailDetail">Cargando...</span>
            </div>
            <div class="flex justify-between py-3">
              <span class="text-gray-400">Empresa:</span>
              <span class="text-white font-medium" id="userCompany">Cargando...</span>
            </div>
          </div>
        </div>

        <!-- System Status Card -->
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-8">
          <h3 class="text-xl font-bold text-white mb-6 flex items-center">
            <svg class="w-5 h-5 mr-2 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            Estado del Sistema
          </h3>
          
          <div class="space-y-4">
            <div class="flex items-center justify-between py-3 border-b border-white/10">
              <span class="text-gray-400">API Backend</span>
              <span class="flex items-center text-green-400">
                <div class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></div>
                Conectado
              </span>
            </div>
            <div class="flex items-center justify-between py-3 border-b border-white/10">
              <span class="text-gray-400">Autenticación JWT</span>
              <span class="flex items-center text-green-400">
                <div class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></div>
                Activo
              </span>
            </div>
            <div class="flex items-center justify-between py-3 border-b border-white/10">
              <span class="text-gray-400">Base de Datos</span>
              <span class="flex items-center text-green-400">
                <div class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></div>
                PostgreSQL
              </span>
            </div>
            <div class="flex items-center justify-between py-3">
              <span class="text-gray-400">Sesión</span>
              <span class="flex items-center text-green-400" id="sessionStatus">
                <div class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></div>
                Válida
              </span>
            </div>
          </div>
        </div>
      </div>

      <!-- Test API Section -->
      <div class="mt-8">
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-8">
          <h3 class="text-xl font-bold text-white mb-6 flex items-center">
            <svg class="w-5 h-5 mr-2 text-cyan-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>
            Probar Conexión API
          </h3>
          
          <div class="flex space-x-4">
            <Button 
              id="testApiBtn"
              variant="primary"
              class="bg-gradient-to-r from-[--accent] to-cyan-500 hover:from-cyan-600 hover:to-blue-600"
            >
              Probar API
            </Button>
            <Button 
              id="verifyTokenBtn"
              variant="secondary"
              class="bg-purple-500/20 hover:bg-purple-500/30 text-purple-400 border-purple-500/30"
            >
              Verificar Token
            </Button>
          </div>
          
          <div class="mt-6 p-4 bg-black/30 rounded-lg border border-white/10">
            <p class="text-gray-400 text-sm mb-2">Resultado:</p>
            <pre class="text-green-400 text-sm overflow-x-auto" id="apiResult">Presiona un botón para probar la API...</pre>
          </div>
        </div>
      </div>
    </main>
  </div>

  <!-- JavaScript for dashboard functionality -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Check authentication
      checkAuthentication();
      
      // Load user info
      loadUserInfo();
      
      // Event listeners
      document.getElementById('logoutBtn')?.addEventListener('click', logout);
      document.getElementById('testApiBtn')?.addEventListener('click', testApi);
      document.getElementById('verifyTokenBtn')?.addEventListener('click', verifyToken);
    });

    function checkAuthentication() {
      const token = localStorage.getItem('upcrop_token') || sessionStorage.getItem('upcrop_token');
      
      if (!token) {
        // No token found, redirect to login
        window.location.href = '/login';
        return;
      }
    }

    function loadUserInfo() {
      const userDataStr = localStorage.getItem('upcrop_user') || sessionStorage.getItem('upcrop_user');
      
      if (userDataStr) {
        try {
          const userData = JSON.parse(userDataStr);
          
          // Update greeting
          const userGreeting = document.getElementById('userGreeting');
          const userEmail = document.getElementById('userEmail');
          if (userGreeting) userGreeting.textContent = `Bienvenido, ${userData.nombre}`;
          if (userEmail) userEmail.textContent = userData.email;
          
          // Update user info card
          const userName = document.getElementById('userName');
          const userUsername = document.getElementById('userUsername');
          const userEmailDetail = document.getElementById('userEmailDetail');
          const userCompany = document.getElementById('userCompany');
          
          if (userName) userName.textContent = userData.nombre || 'N/A';
          if (userUsername) userUsername.textContent = userData.username || 'N/A';
          if (userEmailDetail) userEmailDetail.textContent = userData.email || 'N/A';
          if (userCompany) userCompany.textContent = userData.empresa || 'N/A';
          
        } catch (e) {
          console.error('Error parsing user data:', e);
          const userGreeting = document.getElementById('userGreeting');
          if (userGreeting) userGreeting.textContent = 'Usuario autenticado';
        }
      }
    }

    function logout() {
      // Clear all stored data
      localStorage.removeItem('upcrop_token');
      localStorage.removeItem('upcrop_user');
      localStorage.removeItem('upcrop_refresh_token');
      sessionStorage.removeItem('upcrop_token');
      sessionStorage.removeItem('upcrop_user');
      sessionStorage.removeItem('upcrop_refresh_token');
      
      // Show message and redirect
      showMessage('Sesión cerrada correctamente', 'success');
      setTimeout(() => {
        window.location.href = '/login';
      }, 1000);
    }

    function testApi() {
      const resultElement = document.getElementById('apiResult');
      if (!resultElement) return;
      
      resultElement.textContent = 'Probando conexión con la API...';
      
      fetch('http://localhost:8000/api/', {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
        }
      })
      .then(response => response.json())
      .then(data => {
        resultElement.textContent = JSON.stringify(data, null, 2);
        resultElement.className = 'text-green-400 text-sm overflow-x-auto';
        showMessage('API funcionando correctamente', 'success');
      })
      .catch(err => {
        resultElement.textContent = `Error: ${err.message}`;
        resultElement.className = 'text-red-400 text-sm overflow-x-auto';
        showMessage('Error al conectar con la API', 'error');
      });
    }

    function verifyToken() {
      const resultElement = document.getElementById('apiResult');
      if (!resultElement) return;
      
      const token = localStorage.getItem('upcrop_token') || sessionStorage.getItem('upcrop_token');
      
      if (!token) {
        resultElement.textContent = 'Error: No hay token disponible';
        resultElement.className = 'text-red-400 text-sm overflow-x-auto';
        return;
      }
      
      resultElement.textContent = 'Verificando token...';
      
      fetch('http://localhost:8000/api/verify-token/', {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Authorization': `Bearer ${token}`,
        }
      })
      .then(response => response.json())
      .then(data => {
        resultElement.textContent = JSON.stringify(data, null, 2);
        if (data.success) {
          resultElement.className = 'text-green-400 text-sm overflow-x-auto';
          showMessage('Token válido', 'success');
        } else {
          resultElement.className = 'text-red-400 text-sm overflow-x-auto';
          showMessage('Token inválido', 'error');
          
          // If token is invalid, logout
          if (data.msg && (data.msg.includes('expirado') || data.msg.includes('inválido'))) {
            setTimeout(logout, 2000);
          }
        }
      })
      .catch(err => {
        resultElement.textContent = `Error: ${err.message}`;
        resultElement.className = 'text-red-400 text-sm overflow-x-auto';
        showMessage('Error al verificar token', 'error');
      });
    }

    function showMessage(message: string, type: 'success' | 'error') {
      // Remove existing messages
      const existingMessage = document.querySelector('.message-alert');
      if (existingMessage) {
        existingMessage.remove();
      }
      
      // Create new message
      const messageDiv = document.createElement('div');
      messageDiv.className = `message-alert fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg transform transition-all duration-300 ${
        type === 'success' 
          ? 'bg-green-500/90 text-white border border-green-400' 
          : 'bg-red-500/90 text-white border border-red-400'
      }`;
      messageDiv.textContent = message;
      
      // Add to page
      document.body.appendChild(messageDiv);
      
      // Animate in
      setTimeout(() => {
        messageDiv.style.transform = 'translateX(0)';
        messageDiv.style.opacity = '1';
      }, 100);
      
      // Remove after 3 seconds
      setTimeout(() => {
        messageDiv.style.transform = 'translateX(100%)';
        messageDiv.style.opacity = '0';
        setTimeout(() => {
          if (messageDiv.parentNode) {
            messageDiv.parentNode.removeChild(messageDiv);
          }
        }, 300);
      }, 3000);
    }
  </script>

  <!-- Custom styles -->
  <style>
    /* Glassmorphism enhancement */
    .backdrop-blur-xl {
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
    }
    
    /* Message alerts */
    .message-alert {
      transform: translateX(100%);
      opacity: 0;
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      font-weight: 500;
      min-width: 300px;
      max-width: 400px;
    }
    
    /* Enhanced button hover effects */
    button:hover {
      transform: translateY(-1px);
    }
    
    /* Card hover effects */
    .bg-white\/5:hover {
      background-color: rgba(255, 255, 255, 0.08);
      transform: translateY(-2px);
      transition: all 0.3s ease;
    }
    
    /* Scroll animations */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .grid > div {
      animation: fadeInUp 0.6s ease-out;
    }
    
    .grid > div:nth-child(2) {
      animation-delay: 0.1s;
    }
    
    .grid > div:nth-child(3) {
      animation-delay: 0.2s;
    }
    
    .grid > div:nth-child(4) {
      animation-delay: 0.3s;
    }
  </style>
</LandingLayout>